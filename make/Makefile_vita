# Makefile template taken from vitasdk examples [https://github.com/vitasdk/samples/tree/master/hello_world/Makefile]
# Thanks to PwLDev for helping!

PHONY := all package clean
rwildcard=$(foreach d,$(wildcard $1*),$(call rwildcard,$d/,$2) $(filter $(subst *,%,$2),$d))

TARGET     := Scratch-vita
BUILD      := build/vita
SOURCES    := source source/scratch source/scratch/blocks source/scratch/menus source/sdl source/sdl/audio include/miniz include/nlohmann
INCLUDES   := include source/scratch source/scratch/blocks source/scratch/menus source/sdl source/sdl/audio include/nlohmann

CC := arm-vita-eabi-gcc
CXX := arm-vita-eabi-g++
STRIP := arm-vita-eabi-strip

PROJECT_TITLE := Scratch Everywhere!
PROJECT_TITLEID := NTXS00053

PROJECT := scratch_everywhere
# Base compiler flags
CFLAGS   += -Wl,-q $(addprefix -I,$(INCLUDES))
CXXFLAGS += -Wl,-q -std=c++17 $(addprefix -I,$(INCLUDES))
# Specify vita as the target platform
CFLAGS   += -DVITA -DSDL_BUILD
CXXFLAGS += -DVITA -DSDL_BUILD
# SDL Flags
CFLAGS   += $(shell arm-vita-eabi-pkg-config --cflags sdl2)
CXXFLAGS += $(shell arm-vita-eabi-pkg-config --cflags sdl2)
# Libraries linked into the SELF (not needed, already linked by SDL2)
#LIBS += -lSceDisplay_stub
# SDL2
LIBS     += $(shell arm-vita-eabi-pkg-config --libs sdl2)
LIBS     += $(shell arm-vita-eabi-pkg-config --libs SDL2_image)
LIBS     += $(shell arm-vita-eabi-pkg-config --libs SDL2_ttf)

# Config Options
ENABLE_CLOUDVARS	?=	0
ENABLE_AUDIO	?=	1

# Feature flags
ifeq ($(ENABLE_AUDIO),1)
LIBS     += $(shell arm-vita-eabi-pkg-config --libs SDL2_mixer)
CFLAGS	+=	-DENABLE_AUDIO
CXXFLAGS += -DENABLE_AUDIO
endif

ifeq ($(ENABLE_CLOUDVARS),1)
CFLAGS		+=	-DENABLE_CLOUDVARS
CXXFLAGS += -DENABLE_CLOUDVARS
LIBS				+=	-lmist++ -lcurl
endif


SRC_C   := $(foreach dir,$(SOURCES),$(wildcard $(dir)/*.c))
SRC_CPP := $(foreach dir,$(SOURCES),$(wildcard $(dir)/*.cpp))
# Asset files
GFX_FILES := $(shell find gfx -type f)
GFX_ARGS := $(foreach f,$(GFX_FILES),--add $(f)=$(f))

#OBJ_DIRS := $(addprefix $(BUILD), $(dir $(SRC_C:source/%.c=%.o))) $(addprefix $(BUILD), $(dir $(SRC_CPP:source/%.cpp=%.o)))
#OBJ_DIRS := $(sort $(OBJ_DIRS))
OBJS := $(patsubst %,$(BUILD)/%,$(SRC_C:.c=.o) $(SRC_CPP:.cpp=.o))
OBJ_DIRS := $(sort $(dir $(OBJS)))

# make sure all build artifacts are placed inside BUILD
PROJECT_VITA := $(BUILD)/$(PROJECT)
VPK         := $(PROJECT_VITA).vpk
ELF         := $(PROJECT_VITA).elf
VELF        := $(PROJECT_VITA).velf
EBOOT       := $(BUILD)/eboot.bin
SFO         := $(BUILD)/param.sfo

all: package

package: $(VPK)

$(VPK): $(EBOOT) $(SFO)
	vita-pack-vpk -s $(SFO) -b $(EBOOT) \
		--add gfx/vita/icon0.png=sce_sys/icon0.png \
		--add gfx/vita/livearea/contents/bg.png=sce_sys/livearea/contents/bg.png \
		--add gfx/vita/livearea/contents/template.xml=sce_sys/livearea/contents/template.xml \
		$(GFX_ARGS) \
		$(VPK)

$(EBOOT): $(VELF)
	vita-make-fself -c $(VELF) $(EBOOT)

$(SFO):
	vita-mksfoex -s TITLE_ID="$(PROJECT_TITLEID)" "$(PROJECT_TITLE)" $(SFO)

$(VELF): $(ELF)
	$(STRIP) -g $<
	vita-elf-create $< $@

$(ELF): $(OBJS)
	$(CXX) $(CXXFLAGS) $^ -o $@ $(LIBS)

$(BUILD):
	mkdir -p $@

$(OBJ_DIRS):
	mkdir -p $@

$(BUILD)/%.o : %.cpp | $(OBJ_DIRS)
	$(CXX) -c $(CXXFLAGS) -o $@ $<

$(BUILD)/%.o : %.c | $(OBJ_DIRS)
	$(CC) -c $(CFLAGS) -o $@ $<

clean:
	rm -f $(PROJECT).velf $(PROJECT).elf $(PROJECT).vpk param.sfo eboot.bin $(OBJS)
	rm -r $(abspath $(OBJ_DIRS))
