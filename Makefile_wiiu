.SUFFIXES:
ifeq ($(strip $(DEVKITPRO)),)
$(error "Please set DEVKITPRO in your environment. export DEVKITPRO=<path to>/devkitpro")
endif

TOPDIR ?= $(CURDIR)
include $(DEVKITPRO)/wut/share/wut_rules

PKGCONF				:=	/opt/devkitpro/portlibs/ppc/bin/powerpc-eabi-pkg-config
PKGCONF_WIIU	:=	/opt/devkitpro/portlibs/wiiu/bin/powerpc-eabi-pkg-config

# Build Info

TARGET		:=	scratch-runtime
BUILD			:=	build/wiiu
SOURCES		:=	source source/scratch source/scratch/blocks source/sdl include/miniz include/nlohmann
INCLUDES	:=	include source/scratch source/scratch/blocks source/sdl include/nlohmann

# WHUB Info

WHUB_TOOL        :=  /opt/devkitpro/tools/bin/wuhbtool

WHUB_NAME				:=	Scratch Wii U
WHUB_SHORT_NAME	:=	$(WHUB_NAME)
WHUB_AUTHOR			:=	NateXS and Grady Link
WHUB_ICON				:=	gfx/icon.png

# Flags

CFLAGS	:=	-g -Wall -O2 -Wno-format-truncation -ffunction-sections -ffast-math $(MACHDEP)

export INCLUDE	:=	$(foreach dir,$(INCLUDES),-I$(CURDIR)/$(dir)) $(foreach dir,$(LIBDIRS),-I$(dir)/include) -I$(CURDIR)/$(BUILD)

CFLAGS	+=	$(INCLUDE) -D__WIIU__ -D__WUT__
CFLAGS	+=	`$(PKGCONF_WIIU) --cflags SDL2_image SDL2_ttf SDL2_mixer sdl2`
CFLAGS	+=	-I$(DEVKITPRO)/wut/include

CXXFLAGS	:=	$(CFLAGS) -std=c++17 -Wall -D__PC__-fexceptions

ASFLAGS	:=	-g $(MACHDEP)
LDFLAGS	:=	-g $(MACHDEP) $(RPXSPECS) -Wl,-Map,$(notdir $*.map)

LIBS	:=	`$(PKGCONF_WIIU) --libs SDL2_image SDL2_ttf SDL2_mixer sdl2` `$(PKGCONF) --libs zlib libpng`
LIBS	+=	-lharfbuzz -lfreetype

LIBDIRS	:=	$(PORTLIBS) $(WUT_ROOT)

# Compiling

export OUTPUT	:=	$(CURDIR)/$(BUILD)/$(TARGET)
export TOPDIR	:=	$(CURDIR)

export VPATH		:=	$(foreach dir,$(SOURCES),$(CURDIR)/$(dir))
export DEPSDIR	:=	$(CURDIR)/$(BUILD)

CFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.c)))
CPPFILES	:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.cpp)))
SFILES		:=	$(foreach dir,$(SOURCES),$(notdir $(wildcard $(dir)/*.s)))

ifeq ($(strip $(CPPFILES)),)
	export LD	:=	$(CC)
else
  export LD	:=	$(CXX)
endif

export SRCFILES	:=	$(CPPFILES) $(CFILES) $(SFILES)
export OFILES		:=	$(CPPFILES:.cpp=.o) $(CFILES:.c=.o) $(SFILES:.s=.o)
export LIBPATHS	:=	$(foreach dir,$(LIBDIRS),-L$(dir)/lib)

# RomFS

ROMFS	:=	romfs

include $(PORTLIBS_PATH)/wiiu/share/romfs-wiiu.mk

CFLAGS		+=	$(ROMFS_CFLAGS)
CXXFLAGS	+=	$(ROMFS_CFLAGS)
LIBS			+=	$(ROMFS_LIBS)
OFILES		+=	$(ROMFS_TARGET)

.PHONY: $(BUILD) clean all

all: mkdir $(OUTPUT).rpx whub

mkdir:
	@mkdir -p $(BUILD)

whub:
	@$(WHUB_TOOL) $(BUILD)/$(TARGET).rpx $(BUILD)/$(TARGET).whub --name=$(WHUB_NAME) --short-name=$(WHUB_SHORT_NAME) --author=$(WHUB_AUTHOR) --icon=$(WHUB_ICON)

test:
	Cemu -g $(TARGET).rpx

clean:
	@echo clean ...
	@rm -rf $(BUILD) $(BUILD)/$(TARGET).rpx $(BUILD)/$(TARGET).elf $(BUILD)/$(TARGET).wuhb $(BUILD)/*

DEPENDS	:=	$(OFILES:.o=.d)

$(OUTPUT).elf: $(addprefix $(BUILD)/,$(OFILES))
	$(LD) $(LDFLAGS) $(addprefix $(BUILD)/,$(OFILES)) $(LIBS) $(LIBPATHS) -o $@

$(BUILD)/%.o: %.cpp
	@echo "Compiling $< ..."
	@mkdir -p $(@D)
	@$(CXX) $(CXXFLAGS) -MMD -o $@ -c $<

$(BUILD)/%.o: %.c
	@echo "Compiling $< ..."
	@mkdir -p $(@D)
	@$(CC) $(CFLAGS) -MMD -o $@ -c $<

$(BUILD)/%.o: %.s
	@echo "Assembling $< ..."
	@mkdir -p $(@D)
	@$(AS) $(ASFLAGS) -o $@ -c $<

-include $(DEPENDS)
